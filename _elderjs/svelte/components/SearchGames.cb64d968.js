import { e as element, t as text, c as claim_element, a as children, m as claim_text, d as detach_dev, b as attr_dev, f as add_location, i as insert_dev, g as append_dev, B as listen_dev, P as set_data_dev, h as dispatch_dev, w as validate_each_argument, k as space, l as claim_space, Z as set_input_value, n as noop, N as destroy_each, v as validate_slots, Q as getContext, _ as createEventDispatcher, S as SvelteComponentDev, j as init, s as safe_not_equal } from '../index-96466d9a.js';
import { t as tagsFilter } from '../tagsFilter-23b6c8d4.js';

/* src/components/SearchGames.svelte generated by Svelte v3.29.7 */
const file = "src/components/SearchGames.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[8] = list[i];
	return child_ctx;
}

// (97:2) {#each tagsFilter as tag}
function create_each_block(ctx) {
	let button;
	let t0_value = /*tag*/ ctx[8] + "";
	let t0;
	let t1;
	let mounted;
	let dispose;

	function click_handler() {
		return /*click_handler*/ ctx[4](/*tag*/ ctx[8]);
	}

	const block = {
		c: function create() {
			button = element("button");
			t0 = text(t0_value);
			t1 = text(" ×");
			this.h();
		},
		l: function claim(nodes) {
			button = claim_element(nodes, "BUTTON", { class: true });
			var button_nodes = children(button);
			t0 = claim_text(button_nodes, t0_value);
			t1 = claim_text(button_nodes, " ×");
			button_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(button, "class", "tag svelte-w0mhkt");
			add_location(button, file, 97, 4, 2037);
		},
		m: function mount(target, anchor) {
			insert_dev(target, button, anchor);
			append_dev(button, t0);
			append_dev(button, t1);

			if (!mounted) {
				dispose = listen_dev(button, "click", click_handler, false, false, false);
				mounted = true;
			}
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			if (dirty & /*tagsFilter*/ 1 && t0_value !== (t0_value = /*tag*/ ctx[8] + "")) set_data_dev(t0, t0_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(button);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(97:2) {#each tagsFilter as tag}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let div;
	let img;
	let img_src_value;
	let t0;
	let t1;
	let input;
	let mounted;
	let dispose;
	let each_value = /*tagsFilter*/ ctx[0];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			div = element("div");
			img = element("img");
			t0 = space();

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t1 = space();
			input = element("input");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			img = claim_element(div_nodes, "IMG", { src: true, class: true, alt: true });
			t0 = claim_space(div_nodes);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div_nodes);
			}

			t1 = claim_space(div_nodes);
			input = claim_element(div_nodes, "INPUT", { placeholder: true, class: true });
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = "/ryujinx-catalog/icons/magnifyingGlass.svg")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "class", "icon svelte-w0mhkt");
			attr_dev(img, "alt", "Search");
			add_location(img, file, 94, 2, 1921);
			attr_dev(input, "placeholder", "Search");
			attr_dev(input, "class", "searchInput svelte-w0mhkt");
			add_location(input, file, 105, 2, 2149);
			attr_dev(div, "class", "container svelte-w0mhkt");
			add_location(div, file, 93, 0, 1895);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, img);
			append_dev(div, t0);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}

			append_dev(div, t1);
			append_dev(div, input);
			set_input_value(input, /*inputFilter*/ ctx[1]);

			if (!mounted) {
				dispose = listen_dev(input, "input", /*input_input_handler*/ ctx[5]);
				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*onTagClick, tagsFilter*/ 5) {
				each_value = /*tagsFilter*/ ctx[0];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(div, t1);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}

			if (dirty & /*inputFilter*/ 2 && input.value !== /*inputFilter*/ ctx[1]) {
				set_input_value(input, /*inputFilter*/ ctx[1]);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			destroy_each(each_blocks, detaching);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("SearchGames", slots, []);
	let { allGames } = $$props, { tagsFilter: tagsFilter$1 } = $$props;
	const { toggleTag } = getContext(tagsFilter.key);
	const onTagClick = tag => toggleTag(tag);
	const dispatch = createEventDispatcher();
	let inputFilter = "";
	const writable_props = ["allGames", "tagsFilter"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<SearchGames> was created with unknown prop '${key}'`);
	});

	const click_handler = tag => onTagClick(tag);

	function input_input_handler() {
		inputFilter = this.value;
		$$invalidate(1, inputFilter);
	}

	$$self.$$set = $$props => {
		if ("allGames" in $$props) $$invalidate(3, allGames = $$props.allGames);
		if ("tagsFilter" in $$props) $$invalidate(0, tagsFilter$1 = $$props.tagsFilter);
	};

	$$self.$capture_state = () => ({
		getContext,
		createEventDispatcher,
		key: tagsFilter.key,
		allGames,
		tagsFilter: tagsFilter$1,
		toggleTag,
		onTagClick,
		dispatch,
		inputFilter
	});

	$$self.$inject_state = $$props => {
		if ("allGames" in $$props) $$invalidate(3, allGames = $$props.allGames);
		if ("tagsFilter" in $$props) $$invalidate(0, tagsFilter$1 = $$props.tagsFilter);
		if ("inputFilter" in $$props) $$invalidate(1, inputFilter = $$props.inputFilter);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*inputFilter, tagsFilter, allGames*/ 11) {
			$: if (inputFilter === "" && tagsFilter$1.length === 0) {
				dispatch("update", allGames);
			} else {
				const inputFilterLowerCase = inputFilter.toLowerCase();
				const gamesFiltered = allGames.filter(game => (tagsFilter$1.length === 0 || tagsFilter$1.every(tag => game.tags.includes(tag))) && (inputFilterLowerCase.length === 0 || game.title.toLowerCase().includes(inputFilterLowerCase)));
				dispatch("update", gamesFiltered);
			}
		}
	};

	return [
		tagsFilter$1,
		inputFilter,
		onTagClick,
		allGames,
		click_handler,
		input_input_handler
	];
}

class SearchGames extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { allGames: 3, tagsFilter: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "SearchGames",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*allGames*/ ctx[3] === undefined && !("allGames" in props)) {
			console.warn("<SearchGames> was created without expected prop 'allGames'");
		}

		if (/*tagsFilter*/ ctx[0] === undefined && !("tagsFilter" in props)) {
			console.warn("<SearchGames> was created without expected prop 'tagsFilter'");
		}
	}

	get allGames() {
		throw new Error("<SearchGames>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set allGames(value) {
		throw new Error("<SearchGames>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get tagsFilter() {
		throw new Error("<SearchGames>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set tagsFilter(value) {
		throw new Error("<SearchGames>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default SearchGames;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VhcmNoR2FtZXMuY2I2NGQ5NjguanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1NlYXJjaEdhbWVzLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxuICBpbXBvcnQgeyBnZXRDb250ZXh0IH0gZnJvbSAnc3ZlbHRlJ1xuICBpbXBvcnQgeyBjcmVhdGVFdmVudERpc3BhdGNoZXIgfSBmcm9tICdzdmVsdGUnXG4gIGltcG9ydCB7IGtleSB9IGZyb20gJy4uL2NvbnRleHRzL3RhZ3NGaWx0ZXInXG5cbiAgZXhwb3J0IGxldCBhbGxHYW1lcywgdGFnc0ZpbHRlclxuXG4gIGNvbnN0IHsgdG9nZ2xlVGFnIH0gPSBnZXRDb250ZXh0KGtleSlcblxuICBjb25zdCBvblRhZ0NsaWNrID0gKHRhZykgPT5cbiAgICB0b2dnbGVUYWcodGFnKVxuXG4gIGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKClcblxuICBsZXQgaW5wdXRGaWx0ZXIgPSAnJ1xuXG4gICQ6IGlmIChpbnB1dEZpbHRlciA9PT0gJycgJiYgdGFnc0ZpbHRlci5sZW5ndGggPT09IDApIHtcbiAgICBkaXNwYXRjaCgndXBkYXRlJywgYWxsR2FtZXMpXG4gIH0gZWxzZSB7XG4gICAgY29uc3QgaW5wdXRGaWx0ZXJMb3dlckNhc2UgPSBpbnB1dEZpbHRlci50b0xvd2VyQ2FzZSgpXG4gICAgY29uc3QgZ2FtZXNGaWx0ZXJlZCA9IGFsbEdhbWVzXG4gICAgICAuZmlsdGVyKGdhbWUgPT5cbiAgICAgICAgKHRhZ3NGaWx0ZXIubGVuZ3RoID09PSAwIHx8IHRhZ3NGaWx0ZXIuZXZlcnkodGFnID0+IGdhbWUudGFncy5pbmNsdWRlcyh0YWcpKSkgJiZcbiAgICAgICAgKGlucHV0RmlsdGVyTG93ZXJDYXNlLmxlbmd0aCA9PT0gMCB8fCBnYW1lLnRpdGxlLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoaW5wdXRGaWx0ZXJMb3dlckNhc2UpKVxuICAgICAgKVxuICAgIGRpc3BhdGNoKCd1cGRhdGUnLCBnYW1lc0ZpbHRlcmVkKVxuICB9XG48L3NjcmlwdD5cblxuPHN0eWxlPlxuICAuY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNiMWIxYjE7XG4gICAgdHJhbnNpdGlvbjogYm9yZGVyLWJvdHRvbSAwLjVzIGxpbmVhcjtcbiAgICBoZWlnaHQ6IDMwcHg7XG4gIH1cblxuICAuY29udGFpbmVyOmZvY3VzLXdpdGhpbiB7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHdoaXRlO1xuICB9XG5cbiAgLmljb24ge1xuICAgIG1hcmdpbi1yaWdodDogNXB4O1xuICAgIGZpbHRlcjogaW52ZXJ0KDEwMCUpIHNlcGlhKDAlKSBzYXR1cmF0ZSgyJSkgaHVlLXJvdGF0ZSg5OWRlZykgYnJpZ2h0bmVzcygxMDYlKSBjb250cmFzdCgxMDElKTtcbiAgICBoZWlnaHQ6IDI1cHg7XG4gIH1cblxuICAudGFnIHtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgb3V0bGluZTogbm9uZTtcblxuICAgIG1hcmdpbi1yaWdodDogNXB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDAuNXJlbTtcbiAgICBwYWRkaW5nOiAwLjI1cmVtO1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzQ1NDU0ZTtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcblxuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgIHRyYW5zaXRpb246IGZpbHRlciAwLjJzIGVhc2Utb3V0O1xuICB9XG5cbiAgLnRhZzpob3ZlciB7XG4gICAgZmlsdGVyOiBicmlnaHRuZXNzKDEyMCUpO1xuICB9XG5cbiAgLnNlYXJjaElucHV0IHtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG5cbiAgLnNlYXJjaElucHV0OmZvY3Vze1xuICAgIG91dGxpbmU6IG5vbmU7XG4gIH1cblxuICAuc2VhcmNoSW5wdXQ6OnBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogI2MxYzFjMTtcbiAgfVxuPC9zdHlsZT5cblxuPGRpdiBjbGFzcz1cImNvbnRhaW5lclwiPlxuICA8aW1nIHNyYz1cIi9yeXVqaW54LWNhdGFsb2cvaWNvbnMvbWFnbmlmeWluZ0dsYXNzLnN2Z1wiIGNsYXNzPVwiaWNvblwiIGFsdD1cIlNlYXJjaFwiIC8+XG5cbiAgeyNlYWNoIHRhZ3NGaWx0ZXIgYXMgdGFnfVxuICAgIDxidXR0b25cbiAgICAgIGNsYXNzPVwidGFnXCJcbiAgICAgIG9uOmNsaWNrPXsoKSA9PiBvblRhZ0NsaWNrKHRhZyl9XG4gICAgPlxuICAgICAge3RhZ30gw5dcbiAgICA8L2J1dHRvbj5cbiAgey9lYWNofVxuXG4gIDxpbnB1dFxuICAgIHBsYWNlaG9sZGVyPVwiU2VhcmNoXCJcbiAgICBjbGFzcz1cInNlYXJjaElucHV0XCJcbiAgICBiaW5kOnZhbHVlPXtpbnB1dEZpbHRlcn1cbiAgPlxuPC9kaXY+XG4iXSwibmFtZXMiOlsidGFnc0ZpbHRlciIsImtleSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O3dCQXFHTyxHQUFHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvRUFBSCxHQUFHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztpQ0FMRCxHQUFVOzs7O2dDQUFmLE1BQUk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MENBWVEsR0FBVzs7Ozs7Ozs7O2dDQVpsQixHQUFVOzs7OytCQUFmLE1BQUk7Ozs7Ozs7Ozs7Ozs7Ozs7b0NBQUosTUFBSTs7O29FQVlRLEdBQVc7MkNBQVgsR0FBVzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O09BdkdkLFFBQVEsNEJBQUVBLFlBQVU7U0FFdkIsU0FBUyxLQUFLLFVBQVUsQ0FBQ0MsY0FBRztPQUU5QixVQUFVLEdBQUksR0FBRyxJQUNyQixTQUFTLENBQUMsR0FBRztPQUVULFFBQVEsR0FBRyxxQkFBcUI7S0FFbEMsV0FBVyxHQUFHLEVBQUU7Ozs7Ozs7OEJBcUZBLFVBQVUsQ0FBQyxHQUFHOzs7RUFTcEIsV0FBVzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBNUZ6QixDQUFDLE1BQU0sV0FBVyxLQUFLLEVBQUUsSUFBSUQsWUFBVSxDQUFDLE1BQU0sS0FBSyxDQUFDO0lBQ2xELFFBQVEsQ0FBQyxRQUFRLEVBQUUsUUFBUTs7VUFFckIsb0JBQW9CLEdBQUcsV0FBVyxDQUFDLFdBQVc7VUFDOUMsYUFBYSxHQUFHLFFBQVEsQ0FDM0IsTUFBTSxDQUFDLElBQUksS0FDVEEsWUFBVSxDQUFDLE1BQU0sS0FBSyxDQUFDLElBQUlBLFlBQVUsQ0FBQyxLQUFLLENBQUMsR0FBRyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsUUFDekUsb0JBQW9CLENBQUMsTUFBTSxLQUFLLENBQUMsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsR0FBRyxRQUFRLENBQUMsb0JBQW9CO0lBRWhHLFFBQVEsQ0FBQyxRQUFRLEVBQUUsYUFBYTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==
